import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { Router, NavigationEnd } from '@angular/router';
import { filter, map } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class PreviousRouteService {

  public previousUrl: BehaviorSubject<string>;

  private currentUrl: string;

  constructor(private router: Router) {

    this.currentUrl = this.router.url;
    this.previousUrl = new BehaviorSubject('');

    this.router.events
      .pipe(
        filter(event => event instanceof NavigationEnd),
        map(event => event as NavigationEnd)
      )
      .subscribe(event => {
        this.previousUrl.next(this.currentUrl);
        this.currentUrl = event.urlAfterRedirects;
      });
  }
}
